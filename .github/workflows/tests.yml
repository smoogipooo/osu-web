name: Tests

on: [push, pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  APP_ENV: testing
  APP_KEY: base64:q7U5qyAkedR1F6UhN0SQlUxBpAMDyfHy3NNFkqmiMqA=
  APP_URL: http://localhost:8000
  CACHE_DRIVER: redis
  CACHE_DRIVER_LOCAL: array
  DB_HOST: 127.0.0.1
  DB_USERNAME: root
  ES_SOLO_SCORES_HOST: http://localhost:9200
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NOTIFICATION_ENDPOINT: ws://127.0.0.1:2345
  NOTIFICATION_REDIS_HOST: 127.0.0.1
  OSU_INSTALL_DEV: 1
  OSU_USE_SYSTEM_COMPOSER: 1
  OSU_DB_CREATE: 1
  PAYMENT_SANDBOX: true
  PASSPORT_PRIVATE_KEY: |+
    -----BEGIN PRIVATE KEY-----
    MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBAMevwZweM2xj5GFv
    FY0lzE4b/IQEIBO0NkMBcv1E2zQD7l4cGEft//ksZrP2l5y0l+FCL/2178bt+gZg
    oXalVTrjQYhtP1B3yngpu+N7O75JT+xabMLEsCEnsuFyInfTl+kUGciqX8fIdELx
    9Tgx5nwFkNqhE5Yo3fkhRjnjMaHhAgMBAAECgYEAsIrFvFXDFwAVyMKiJiEVyLTb
    gof3KBR6qLDeTeaTeiBDnPZvzSAw38YOourPzd6oLKIMtd0lORXqp7rE5ZV0jEOo
    QhDuahbMwfTeDOihhTTyc0ZxtY4WlVuV3lbNLZYSKXwpNU/Dud9mWyqSnS5+QcrF
    c/Z6mxpVS6cxBFxrAaUCQQD0LHfl9R3aZbRPpDRX61eOi2wT96dZVi0IV+Yq4qqJ
    L/ZDxCpTBx5xMvVqmET7Q69KULzUfajHOgkW3h+JA8vTAkEA0VuwDMcF6N4TGrpE
    7rwLdFrXVopDCf1IT+y0spf52RUe7dGsUPz+Ed1oQ55S+ZPjAiHIF/EDGhtGkhbc
    h5fO+wJATVe0ltOgpCgpCD0UE3FJZ66ECoMcsDCazRTCpHzt1cyqbea6HViY7PRe
    Rmh7GTfkU17loU04Y/rfHC45wPXB3wJARE7dHx4kwHkM1LCn4xj5x8oH7pWIEA9S
    87jwsEDD5V9tyvyZc4dIQn3yEfXrbsEg1UY+aglaEL+LhAjvhVIz1wJBANGE8xeu
    qLUIE7/3nfacXiK/v02qKlW6++LrvSzgAOLsYyqfYpfmKffSdkTxFIZ8wUjufuOT
    DPxkn/u5C+BuAqQ=
    -----END PRIVATE KEY-----
  PASSPORT_PUBLIC_KEY: |+
    -----BEGIN PUBLIC KEY-----
    MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHr8GcHjNsY+RhbxWNJcxOG/yE
    BCATtDZDAXL9RNs0A+5eHBhH7f/5LGaz9pectJfhQi/9te/G7foGYKF2pVU640GI
    bT9Qd8p4Kbvjezu+SU/sWmzCxLAhJ7LhciJ305fpFBnIql/HyHRC8fU4MeZ8BZDa
    oROWKN35IUY54zGh4QIDAQAB
    -----END PUBLIC KEY-----
  REDIS_HOST: 127.0.0.1
  SESSION_DRIVER: redis
  SHOPIFY_DOMAIN: notarealdomainortld
  SHOPIFY_STOREFRONT_TOKEN: notreal
  SLACK_ENDPOINT: https://myconan.net/null/

jobs:
  tests:
    strategy:
      matrix:
        php: ['8.0']
    name: Tests
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.0
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          -e MYSQL_ALLOW_EMPTY_PASSWORD=1
          --entrypoint sh mysql:8.0 -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"

      elasticsearch:
        env:
          action.auto_create_index: "false"
          discovery.type: single-node
        image: elasticsearch:7.17.6
        ports:
          - 9200:9200

      redis:
        image: redis
        ports:
          - 6379:6379

      osu-beatmap-difficulty-lookup-cache:
        image: pppy/osu-beatmap-difficulty-lookup-cache
        ports:
          - 5000:80

      osu-elastic-indexer:
        image: pppy/osu-elastic-indexer
        options: >-
          -e DB_CONNECTION_STRING=Server=db;Database=osu;Uid=root
          -e ES_HOST=http://elasticsearch:9200
          -e REDIS_HOST=redis
          -e SCHEMA=test
          --entrypoint sh pppy/osu-elastic-indexer -c "exec dotnet osu.ElasticIndexer.dll queue --force-version --wait"

      osu-notification-server:
        env:
          APP_KEY: ${{ env.APP_KEY }}
          DB_HOST: db
          DB_USERNAME: ${{ env.DB_USERNAME }}
          NOTIFICATION_REDIS_HOST: redis
          NOTIFICATION_SERVER_LISTEN_HOST: 0.0.0.0
          PASSPORT_PUBLIC_KEY: ${{ env.PASSPORT_PUBLIC_KEY }}
          REDIS_HOST: redis
        image: pppy/osu-notification-server
        ports:
          - 2345:2345

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: '16'

      - name: Set php version
        uses: shivammathur/setup-php@v2
        with:
          extensions: redis
          tools: composer:v2
          php-version: ${{ matrix.php }}

      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer
        uses: actions/cache@v3
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - run: ./build.sh

      - name: Setup indices
        run: |
          php artisan es:create-search-blacklist
          php artisan es:index-documents --yes
          php artisan es:index-wiki --create-only --yes

      - name: Generate docs
        run: php artisan scribe:generate

      - name: Run karma
        run: yarn karma start --single-run --browsers ChromeHeadless

      - name: Run PHPUnit
        run: ./bin/phpunit.sh

      - name: Run Dusk
        run: ./bin/run_dusk.sh

      # this only tests that the rollback functions are valid and doesn't check
      # if they actually do what they're expected to do.
      - name: Migration rollback test
        run: |
          php artisan migrate:reset | tee rollback.log
          grep -Fq 'no rolling back from this migration =)' rollback.log
